@{
    ViewData["Title"] = "Home";
}


<div class="container">
    <div class="col-12 d-flex justify-content-around align-items-stretch" style="height: 60vh;">
        <div class="col-md-6 col-sm-12 mx-5">
            <div>
                <div style="display: flex; flex-direction: row;align-items: stretch; justify-content: space-around;">
                    <div class="col-md-6 sensor-data mb-3">
                        <h4>Yakınlık Sensörü</h4>
                        <div class="box sensor-box" id="proximity-box">
                            <p id="proximity-sensor">Sensör Değeri: </p>
                            <p>Kapıyı Aç </p>
                            <div class="ml-3">
                                <div class="form-check" id="proximity-controls">
                                    <input class="form-check-input" type="radio" name="speed" id="slow" value="9"
                                        checked>
                                    <label class="form-check-label" for="slow">
                                        Yavaş
                                    </label>
                                </div>
                                <div class="form-check">
                                    <input class="form-check-input" type="radio" name="speed" id="medium" value="15">
                                    <label class="form-check-label" for="medium">
                                        Orta
                                    </label>
                                </div>
                                <div class="form-check">
                                    <input class="form-check-input" type="radio" name="speed" id="fast" value="30">
                                    <label class="form-check-label" for="fast">
                                        Hızlı
                                    </label>
                                </div>
                                <button class="btn btn-md btn-primary" id="send-proximity">Gönder</button>
                            </div>
                        </div>
                    </div>

                    <div class="col-md-6 sensor-data">
                        <h4>Gaz Sensörü</h4>
                        <div class="box sensor-box" id="gas-box">
                            <p id="gas-sensor">Sensör Değeri: </p>
                            <p>Fanı Ayarla</p>
                            <div class="ml-3">
                                <div class="form-check" id="gas-controls">
                                    <input class="form-check-input" type="radio" name="gasSpeed" id="slow" value="5"
                                        checked>
                                    <label class="form-check-label" for="slow">
                                        Yavaş
                                    </label>
                                </div>
                                <div class="form-check">
                                    <input class="form-check-input" type="radio" name="gasSpeed" id="medium" value="50">
                                    <label class="form-check-label" for="medium">
                                        Orta
                                    </label>
                                </div>
                                <div class="form-check">
                                    <input class="form-check-input" type="radio" name="gasSpeed" id="fast" value="100">
                                    <label class="form-check-label" for="fast">
                                        Hızlı
                                    </label>
                                </div>
                                <button class="btn btn-md btn-primary" id="send-gas">Gönder</button>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-12">
                    @await Component.InvokeAsync("Files")
                </div>
            </div>
        </div>

        <div class="col-md-6 col-sm-12 mx-5" style="align-items: stretch;">
            <div class="stream-container position-relative" style="min-width: auto;height: 480px;background: #ddd;">
                <img id="streamImg" class="img-fluid">
                <div id="recordingIndicator"
                    style="position: absolute;top: 0;right: 0;margin:15px;background: grey;padding: 10px;border-radius: 50%;">
                </div>
            </div>

            <div class="mt-1">
                <button class="btn btn-danger" id="startRecordingBtn">Kaydı Başlat</button>
                <button class="btn btn-warning" id="stopRecordingBtn">Kaydı Durdur</button>
                <a class="btn btn-primary" id="photo">Foto</a>
            </div>
        </div>

        <script>
            $(document).ready(function () {
                $("#stopRecordingBtn").prop("disabled", true);

                checkRecordingStatus();
                setInterval(checkRecordingStatus, 1000);

                function checkRecordingStatus() {
                    $.ajax({
                        url: '/stream/checkRecordingStatus',
                        type: 'GET',
                        success: function (response) {
                            if (response.isSuccess === "True") {
                                $('#recordingIndicator').addClass('recording');
                            } else {
                                $('#recordingIndicator').removeClass('recording');
                            }
                        },
                        error: function () {
                            console.error('Durum alınamadı');
                        }
                    });
                }

                $("#startRecordingBtn").click(function () {
                    $.ajax({
                        url: '/stream/startRecording',
                        type: 'POST',
                        success: function (response) {
                            if (response.isSuccess === "True") {
                                Swal.fire({
                                    icon: "success",
                                    title: "Başarılı!",
                                    text: response.message,
                                    showConfirmButton: false,
                                    timer: 3000
                                });
                                $("#startRecordingBtn").prop("disabled", true);
                                $("#stopRecordingBtn").prop("disabled", false);
                            } else {
                                Swal.fire('Hata', 'Kayıt başlatılamadı!', 'error');
                            }
                        },
                        error: function () {
                            Swal.fire('Hata', 'İstek gönderilirken bir hata oluştu!', 'error');
                        }
                    });
                });

                $("#stopRecordingBtn").click(function () {
                    $.ajax({
                        url: '/stream/stopRecording',
                        type: 'POST',
                        success: function (response) {
                            if (response.isSuccess === "True") {
                                Swal.fire({
                                    icon: "success",
                                    title: "Başarılı!",
                                    text: response.message,
                                    showConfirmButton: false,
                                    timer: 3000
                                });
                                $("#startRecordingBtn").prop("disabled", false);
                                $("#stopRecordingBtn").prop("disabled", true);
                            } else {
                                Swal.fire('Hata', 'Kayıt durdurulamadı!', 'error');
                            }
                        },
                        error: function () {
                            Swal.fire('Hata', 'İstek gönderilirken bir hata oluştu!', 'error');
                        }
                    });
                });

                $("#photo").click(function () {
                    $.ajax({
                        url: '/Stream/CapturePhoto',
                        type: 'POST',
                        success: function (response) {
                            debugger;
                            if (response.isSuccess === true) {
                                $("#FileNamea").val(response.data.fileName);
                                $("#latestImg").attr("src", "/File/GetFile?filePath=" + response.data.fileName + ".png");
                                $("#exampleModal").modal('show');
                            } else {
                                Swal.fire({
                                    icon: "error",
                                    title: "Hata!",
                                    text: response.message,
                                    showConfirmButton: false,
                                    timer: 2000
                                })
                            }
                        },
                        error: function () {
                            Swal.fire('Hata', 'İstek gönderilirken bir hata oluştu!', 'error');
                        }
                    });
                });
            });
            @* const imgElement = document.getElementById('streamImg');
                imgElement.src = 'http://10.42.0.41:8000/stream.mjpg'; *@
        </script>
    </div>


</div>

<script>
        $(document).ready(function () {

            $('#send-proximity').click(function () {
                var selectedSpeed = $('input[name="speed"]:checked').val();

                $.post('/Home/SendProximity', { speed: selectedSpeed })
                    .done(function (response) {
                        if (response.isSuccess === true) {
                            console.log('İşlem başarıyla tamamlandı.');
                            Swal.fire({
                                icon: "success",
                                title: "Başarılı!",
                                text: response.message,
                                showConfirmButton: false,
                                timer: 3000
                            });
                        } else {
                            console.log('İşlem tamamlanamadı.');
                            Swal.fire({
                                icon: "error",
                                title: "Hata!",
                                showConfirmButton: false,
                                timer: 2000
                            });
                        }
                    })
                    .fail(function (response) {
                        Swal.fire({
                            icon: "error",
                            title: "Hata!",
                            showConfirmButton: false,
                            timer: 2000
                        });
                    });
            });

            $('#send-gas').click(function () {
                var selectedGasSpeed = $('input[name="gasSpeed"]:checked').val();

                $.post('/Home/SendGas', { gasSpeed: selectedGasSpeed })
                    .done(function (response) {
                        if (response.isSuccess === true) {
                            console.log('İşlem başarıyla tamamlandı.');
                            Swal.fire({
                                icon: "success",
                                title: "Başarılı!",
                                text: response.message,
                                showConfirmButton: false,
                                timer: 3000
                            });
                        } else {
                            console.log('İşlem tamamlanamadı.');
                            Swal.fire({
                                icon: "error",
                                title: "Error!",
                                showConfirmButton: false,
                                timer: 2000
                            });
                        }
                    })
                    .fail(function (response) {
                        Swal.fire({
                            icon: "error",
                            title: "Error!",
                            showConfirmButton: false,
                            timer: 2000
                        });
                    });
            });

            function getProximitySensorData() {
                $.getJSON('http://10.42.0.41:5000/flask/sensor/hcsr04')
                    .done(function (data) {
                        console.log(data);
                        $('#proximity-sensor').text('Sensör Değeri: ' + data + " cm");
                        if (data <= 5) {
                            $('#proximity-box').addClass('highlight');
                        } else {
                            $('#proximity-box').removeClass('highlight');
                        }
                    })
                    .fail(function () {
                        console.error('Yakınlık sensörü verileri alınamadı.');
                    });
            }

            function getGasSensorData() {
                $.getJSON('http://10.42.0.41:5000/flask/sensor/gas')
                    .done(function (data) {
                        console.log(data);
                        if (data >= 1) {
                            $('#gas-box').addClass('highlight');
                        } else {
                            $('#gas-box').removeClass('highlight');
                        }
                    })
                    .fail(function () {
                        console.error('Gaz sensörü verileri alınamadı.');
                    });
            }

            function getGasSensorData() {
                $.getJSON('http://10.42.0.41:5000/flask/sensor/gas/0')
                    .done(function (data) {
                        console.log(data);
                        $('#gas-sensor').text('Sensör Değeri: ' + data.sensor_value);
                    })
                    .fail(function () {
                        console.error('Gaz sensörü I2C verileri alınamadı.');
                    });
            }

            setInterval(function () {
                getProximitySensorData();
                getGasSensorData();
            }, 3500);
        });

</script>

<style>
    .highlight {
        background-color: red;
        color: black;
    }

    a:hover {
        cursor: pointer;
        color: #007bffa3 !important;
        text-decoration: underline !important;
    }

    .box {
        box-shadow: .1rem .1rem .2rem #80D4FF;
        border-radius: .4rem;
        border-width: .01rem;
        border-style: solid;
        margin-left: .4rem;
        padding: .2rem .7rem .3rem .7rem;
        margin-bottom: .5rem;
        margin-top: .3rem;
    }

    .recording {
        background: red !important;
    }
</style>

<!-- Modal -->
<div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel"
    aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <form asp-action="SendMail" asp-controller="File" method="POST" data-ajax="true"
                data-ajax-success="OnAjaxSuccess" data-ajax-failure="OnAjaxError">

                <div class="modal-header">
                    <h5 class="modal-title" id="mailModalLabel">Yeni Mail</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="form-group">
                        <label for="MailAddress" class="col-form-label">Alıcı Mail Adresi:</label>
                        <input type="text" class="form-control" id="MailAddress" name="MailAddress"
                            value="test@gmail.com">
                    </div>
                    <div class="form-group">
                        <label for="FileNamea" class="col-form-label">Dosya Adı:</label>
                        <input type="text" readonly class="form-control" id="FileNamea" name="FileName" val="">
                    </div>
                    <div class="form-group">
                        <img id="latestImg" class="img-fluid" src="" alt="Resim" />
                    </div>
                </div>

                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary">Gönder</button>
                </div>
            </form>
        </div>
    </div>
</div>
