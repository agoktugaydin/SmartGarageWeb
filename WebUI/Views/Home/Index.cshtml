@{
    ViewData["Title"] = "Home";
}

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<div class="container">
    <div class="col-12 d-flex justify-content-around align-items-stretch" style="height: 60vh;">
        <div class="col-md-6 col-sm-12 mx-5">
            <div>
                <div style="display: flex; flex-direction: row;align-items: stretch; justify-content: space-around;">
                    <div class="col-md-6 sensor-data mb-5">
                        <h2>Yakınlık Sensörü</h2>
                        <div class="box sensor-box" id="proximity-box">
                            <p id="proximity-sensor">Sensör Değeri: </p>
                            <p>Kapıyı Aç </p>

                            <div class="form-check" id="proximity-controls">
                                <input class="form-check-input" type="radio" name="speed" id="slow" value="9" checked>
                                <label class="form-check-label" for="slow">
                                    Yavaş
                                </label>
                            </div>
                            <div class="form-check">
                                <input class="form-check-input" type="radio" name="speed" id="medium" value="15">
                                <label class="form-check-label" for="medium">
                                    Orta
                                </label>
                            </div>
                            <div class="form-check">
                                <input class="form-check-input" type="radio" name="speed" id="fast" value="30">
                                <label class="form-check-label" for="fast">
                                    Hızlı
                                </label>
                            </div>
                            <button class="btn btn-md btn-primary" id="send-proximity">Gönder</button>
                        </div>
                    </div>

                    <div class="col-md-6 sensor-data">
                        <h2>Gaz Sensörü</h2>
                        <div class="box sensor-box" id="gas-box">
                            <p id="gas-sensor">Sensör Değeri: </p>
                            <p>Fanı Ayarla</p>
                            <div class="form-check" id="gas-controls">
                                <input class="form-check-input" type="radio" name="gasSpeed" id="slow" value="5"
                                    checked>
                                <label class="form-check-label" for="slow">
                                    Yavaş
                                </label>
                            </div>
                            <div class="form-check">
                                <input class="form-check-input" type="radio" name="gasSpeed" id="medium" value="50">
                                <label class="form-check-label" for="medium">
                                    Orta
                                </label>
                            </div>
                            <div class="form-check">
                                <input class="form-check-input" type="radio" name="gasSpeed" id="fast" value="100">
                                <label class="form-check-label" for="fast">
                                    Hızlı
                                </label>
                            </div>
                            <button class="btn btn-md btn-primary" id="send-gas">Gönder</button>
                        </div>
                    </div>
                </div>
                <div class="col-12">
                    @await Component.InvokeAsync("Files")
                </div>
            </div>
        </div>

        <div class="col-md-6 col-sm-12 mx-5" style="align-items: stretch;">
            <div class="stream-container position-relative" style="min-width: auto;height: 480px;background: #ddd;">
                <img id="streamImg" class="img-fluid">
                <div id="recordingIndicator"
                    style="position: absolute;top: 0;right: 0;margin:15px;background: red;padding: 10px;border-radius: 50%;">
                </div>
            </div>

            <div class="mt-1">
                <button class="btn btn-danger" id="startRecordingBtn">Kaydı Başlat</button>
                <button class="btn btn-warning" id="stopRecordingBtn">Kaydı Durdur</button>
                <button class="btn btn-primary" id="photo">Foto</button>
            </div>
        </div>

        <script>
            $(document).ready(function () {
                checkRecordingStatus();
                $("#stopRecordingBtn").prop("disabled", true);

                setInterval(checkRecordingStatus, 500);

                function checkRecordingStatus() {
                    $.ajax({
                        url: '/stream/checkRecordingStatus',
                        type: 'GET',
                        success: function (response) {
                            if (response === "True") {
                                $('#recordingIndicator').show();
                            } else {
                                $('#recordingIndicator').hide();
                            }
                        },
                        error: function () {
                            console.error('Durum alınamadı');
                        }
                    });
                }

                $("#startRecordingBtn").click(function () {
                    $.ajax({
                        url: '/stream/startRecording',
                        type: 'POST',
                        success: function (response) {
                            if (response === "True") {
                                Swal.fire('Başarılı', 'Kayıt başlatıldı!', 'success');
                                $("#startRecordingBtn").prop("disabled", true);
                                $("#stopRecordingBtn").prop("disabled", false);
                            } else {
                                Swal.fire('Hata', 'Kayıt başlatılamadı!', 'error');
                            }
                        },
                        error: function () {
                            Swal.fire('Hata', 'İstek gönderilirken bir hata oluştu!', 'error');
                        }
                    });
                });

                $("#stopRecordingBtn").click(function () {
                    $.ajax({
                        url: '/stream/stopRecording',
                        type: 'POST',
                        success: function (response) {
                            if (response === "True") {
                                Swal.fire('Başarılı', 'Kayıt durduruldu!', 'success');
                                $("#startRecordingBtn").prop("disabled", false);
                                $("#stopRecordingBtn").prop("disabled", true);
                            } else {
                                Swal.fire('Hata', 'Kayıt durdurulamadı!', 'error');
                            }
                        },
                        error: function () {
                            Swal.fire('Hata', 'İstek gönderilirken bir hata oluştu!', 'error');
                        }
                    });
                });

                $("#photo").click(function () {
                    $.ajax({
                        url: '/stream/CapturePhoto',
                        type: 'POST',
                        success: function (response) {
                            if (response === "True") {
                                Swal.fire({
                                    icon: "success",
                                    title: "Done!",
                                    showConfirmButton: false,
                                    timer: 2000
                                });
                            } else {
                                Swal.fire({
                                    icon: "error",
                                    title: "Error!",
                                    showConfirmButton: false,
                                    timer: 2000
                                });
                            }
                        },
                        error: function () {
                            Swal.fire('Hata', 'İstek gönderilirken bir hata oluştu!', 'error');
                        }
                    });
                });
            });
        </script>
        <script>
            const imgElement = document.getElementById('streamImg');
            imgElement.src = 'http://10.42.0.41:8000/stream.mjpg';
        </script>
    </div>


</div>

<script>
    $(document).ready(function () {

        $('#send-proximity').click(function () {
            var selectedSpeed = $('input[name="speed"]:checked').val();

            $.post('/Home/SendProximity', { speed: selectedSpeed })
                .done(function (response) {
                    if (response === true) {
                        console.log('İşlem başarıyla tamamlandı.');

                        Swal.fire({
                            icon: "success",
                            title: "Done!",
                            showConfirmButton: false,
                            timer: 2000
                        });
                    } else {
                        console.log('İşlem tamamlanamadı.');

                        Swal.fire({
                            icon: "error",
                            title: "Error!",
                            showConfirmButton: false,
                            timer: 2000
                        });
                    }
                })
                .fail(function (response) {
                    Swal.fire({
                        icon: "error",
                        title: "Error!",
                        showConfirmButton: false,
                        timer: 2000
                    });
                });
        });

        $('#send-gas').click(function () {
            var selectedGasSpeed = $('input[name="gasSpeed"]:checked').val();

            $.post('/Home/SendGas', { gasSpeed: selectedGasSpeed })
                .done(function (response) {
                    if (response === true) {
                        console.log('İşlem başarıyla tamamlandı.');
                        Swal.fire({
                            icon: "success",
                            title: "Done!",
                            showConfirmButton: false,
                            timer: 2000
                        });
                    } else {
                        console.log('İşlem tamamlanamadı.');
                        Swal.fire({
                            icon: "error",
                            title: "Error!",
                            showConfirmButton: false,
                            timer: 2000
                        });
                    }
                })
                .fail(function (response) {
                    Swal.fire({
                        icon: "error",
                        title: "Error!",
                        showConfirmButton: false,
                        timer: 2000
                    });
                });
        });

        function getProximitySensorData() {
            $.getJSON('http://10.42.0.41:5000/flask/sensor/hcsr04')
                .done(function (data) {
                    console.log(data);
                    $('#proximity-sensor').text('Sensör Değeri: ' + data + " cm");
                    if (data <= 5) {
                        $('#proximity-box').addClass('highlight');
                    } else {
                        $('#proximity-box').removeClass('highlight');
                    }
                })
                .fail(function () {
                    console.error('Yakınlık sensörü verileri alınamadı.');
                });
        }

        function getGasSensorData() {
            $.getJSON('http://10.42.0.41:5000/flask/sensor/gas')
                .done(function (data) {
                    console.log(data);
                    if (data >= 1) {
                        $('#gas-box').addClass('highlight');
                    } else {
                        $('#gas-box').removeClass('highlight');
                    }
                })
                .fail(function () {
                    console.error('Gaz sensörü verileri alınamadı.');
                });
        }

        function getGasSensorData() {
            $.getJSON('http://10.42.0.41:5000/flask/sensor/gas/0')
                .done(function (data) {
                    console.log(data);
                    $('#gas-sensor').text('Sensör Değeri: ' + data.sensor_value);
                })
                .fail(function () {
                    console.error('Gaz sensörü I2C verileri alınamadı.');
                });
        }

        setInterval(function () {
            getProximitySensorData();
            getGasSensorData();
        }, 3500);
    });

</script>

<style>
    .highlight {
        background-color: red;
        color: black;
    }

    .box {
        box-shadow: .1rem .1rem .2rem #80D4FF;
        border-radius: .4rem;
        border-width: .01rem;
        border-style: solid;
        margin-left: .4rem;
        padding: .2rem .7rem .3rem .7rem;
        margin-bottom: .5rem;
        margin-top: .3rem;
    }
</style>